version: "3.9"
services:
  temporal:
    image: temporalio/auto-setup:${TEMPORAL_VERSION}           # set this to temporalio/auto-setup:<version>
    environment:
      - DB=postgres12                # driver for Postgres with auto-setup
      - DB_PORT=5432
      - POSTGRES_SEEDS=temporal-db   # hostname of the DB service on the compose network
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_DB=temporal
      - TEMPORAL_ADDRESS=temporal:7233
    ports:
      - "7233:7233"
    depends_on:
      temporal-db:
        condition: service_healthy

  temporal-db:
    image: ${POSTGRES_IMG}
    environment:
      POSTGRES_USER: temporal
      POSTGRES_PASSWORD: temporal
      POSTGRES_DB: temporal
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U temporal -d temporal" ]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - pgdata:/var/lib/postgresql/data

  temporal-ui:
    image: temporalio/ui:${TEMPORAL_UI_VERSION}  # or a pinned version
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
    ports:
      - "8080:8080"
    depends_on:
      - temporal

  order-service:
    build: ../../order-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_ADDRESS=postgres-order:5432
      - TEMPORAL_ADDRESS=temporal:7233
      - INVENTORY_BASE=http://inventory-service:8080
      - PAYMENT_BASE=http://payment-service:8080
      - PORT= 8080
    depends_on:
      - temporal
      - postgres-order
    ports: [ "8081:8080" ]

  postgres-order:
    image: ${POSTGRES_IMG}
    environment:
      POSTGRES_USER: order
      POSTGRES_PASSWORD: order
      POSTGRES_DB: orderdb
    ports: [ "5433:5432" ]

  inventory-service:
    build: ../../inventory-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_ADDRESS=postgres-inventory:5432
    ports: [ "8082:8080" ]

  postgres-inventory:
    image: ${POSTGRES_IMG}
    environment:
      POSTGRES_USER: inventory
      POSTGRES_PASSWORD: inventory
      POSTGRES_DB: inventorydb
    ports: [ "5434:5432" ]

  payment-service:
    build: ../../payment-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports: [ "8083:8080" ]

  adminer:
    image: adminer:4
    restart: unless-stopped
    ports: [ "8084:8080" ]

volumes:
  pgdata: {}
